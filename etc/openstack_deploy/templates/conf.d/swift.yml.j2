#jinja2: lstrip_blocks: True
# {{ ansible_managed }}
---
# The Swift services hosts
{% if 'swift' in onpc_services_list %}
swift:
  part_power: 8
  repl_number: 3
  min_part_hours: 1
{% raw %}
  storage_network: "{{ (container_tech != 'nspawn') | ternary(storage_network_interface, ansible_default_ipv4['alias']) }}"
  replication_network: "{{ (container_tech != 'nspawn') | ternary(storage_network_interface, ansible_default_ipv4['alias']) }}"
{% endraw %}
  statsd_host: localhost
  statsd_port: 8125
{% raw %}
  statsd_metric_prefix: "{{ inventory_hostname }}.swift"
{% endraw %}
  storage_policies:
    - policy:
        name: default
        index: 0
        default: True

swift-proxy_hosts:
{% for h in controller_hosts_dict %}
  {{ h.name }}:
    ip: {{ h.ip_v4 }}
    container_vars:
      swift_proxy_vars:
        limit_container_types: swift_proxy
        read_affinity: "r{{ loop.index }}=100"
        write_affinity: "r{{ loop.index }}"
        write_affinity_host_count: "2 * replicas"
{% endfor %}

swift_hosts:
{% for h in swift_hosts_dict %}
  {{ h.name }}:
    ip: {{ h.ip_v4 }}
    container_vars:
      swift_vars:
        mount_point: /srv/host
        limit_container_types: swift
        zone: {{ loop.index }}
        region: 1
        weight: 100
        drives:
{% for p in h.partitions %}
{%   if (p.get('partition_name', '') | regex_search('^swift', igno_recase=true)) %}
          - name: {{ p.mountpoint.split('/')[-1] | join }}
{%   endif %}
{% endfor %}
{% endfor %}
{% endif %}