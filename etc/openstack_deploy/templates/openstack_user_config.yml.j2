# {{ ansible_managed }}
---
cidr_networks: &cidr_networks
  container: {{ container_network }}
  tunnel: {{ tunnel_network }}
  storage: {{ storage_network }}
{% if 'octavia' in bootstrap_host_services %}
  lbaas: {{ lbaas_network }}
{% endif %}

used_ips:
{% for ip_or_range in reserved_ips %}
  - {{ ip_or_range }}
{% endfor %}

global_overrides:
  #cidr_networks: *cidr_networks
  internal_lb_vip_address: {{ internal_vip_address }}
  external_lb_vip_address: {{ external_vip_address }}"
  management_bridge: "br-mgmt"
  tunnel_bridge: "br-vxlan"
  provider_networks:
    - network:
        container_bridge: "br-mgmt"
        container_interface: "eth1"
        container_type: "veth"
        ip_from_q: "container"
        is_container_address: true
        is_ssh_address: true
        type: "raw"
        group_binds:
          - all_containers
          - hosts
    - network:
        container_bridge: "br-storage"
        container_interface: "eth2"
        container_type: "veth"
        container_mtu: "9000"
        ip_from_q: "storage"
        type: "raw"
        group_binds:
          - glance_api
          - cinder_api
          - cinder_volume
          - nova_compute
{% if 'swift' in bootstrap_host_services %}
          - swift_proxy
{% endif %}
{% if 'ceph' in bootstrap_host_services %}
          - ceph_osd
{% endif %}
    - network:
        container_bridge: "br-vxlan"
        container_type: "veth"
        container_interface: "eth10"
        container_mtu: "9000"
        ip_from_q: "tunnel"
        type: "vxlan"
        range: "1:1000"
        net_name: "vxlan"
        group_binds:
          - neutron_linuxbridge_agent
    - network:
        container_bridge: "br-vlan"
        container_type: "veth"
        container_interface: "eth11"
        type: "vlan"
        range: "101:200,301:400"
        net_name: "vlan"
        group_binds:
          - neutron_linuxbridge_agent
    - network:
        container_bridge: "br-vlan"
        container_type: "veth"
        container_interface: "eth12"
        host_bind_override: "eth12"
        type: "flat"
        net_name: "flat"
        group_binds:
          - neutron_linuxbridge_agent
{% if 'octavia' in bootstrap_host_services %}
    - network:
        container_bridge: "br-lbaas"
        container_type: "veth"
        container_interface: "eth14"
        host_bind_override: "eth14"
        ip_from_q: "lbaas"
        type: "flat"
        net_name: "lbaas"
        group_binds:
          - neutron_linuxbridge_agent
          - octavia-worker
          - octavia-housekeeping
          - octavia-health-manager
{% endif %}

# Infrastructure (memcached, galera, rabbitmq, ...) hosts
_infrastructure_hosts: &infrastructure_hosts
{% for h in infrastructure_hosts_dict %}
  {{ h.name }}:
    ip: {{ h.ip_v4 }}
{% endfor %}

# Compute hypervisor hosts
compute_hosts: &compute_hosts
{% for h in compute_hosts_dict %}
  {{ h.name }}:
    ip: {{ h.ip_v4 }}
{% endfor %}

# Rsyslog host
log_hosts:
  {{ logging_hosts_dict[0].name }}:
    ip: {{ logging_hosts_dict[0].ip_v4 }}

# Cinder storage (LVM/iSCSI)
storage_hosts:
{% for h in storage_hosts_dict %}
  {{ h.name }}:
    ip: {{ h.ip_v4 }}
    container_vars:
      cinder_backends:
        limit_container_types: cinder_volume
        lvm:
          volume_backend_name: LVM_iSCSI
          volume_driver: cinder.volume.drivers.lvm.LVMVolumeDriver
          volume_group: cinder-volumes
          iscsi_ip_address: "{{ h.ip_v4 }}"
          lvm_type: "thin"
          extra_volume_types:
            - low-iops
            - high-iops
            - ultra-high-iops
{% endfor %}
storage-infra_hosts:
{% for h in infrastructure_hosts_dict %}
  {{ h.name }}:
    ip: {{ h.ip_v4 }}
    container_vars:
      cinder_qos_specs:
        - name: low-iops
          options:
            consumer: front-end
            read_iops_sec: 75
            write_iops_sec: 75
          cinder_volume_types:
            - low-iops
        - name: high-iops
          options:
            consumer: front-end
            read_iops_sec: 150
            write_iops_sec: 150
          cinder_volume_types:
            - high-iops
        - name: ultra-high-iops
          options:
            consumer: front-end
            read_iops_sec: 300
            write_iops_sec: 300
          cinder_volume_types:
            - ultra-high-iops
{% endfor %}

##
## Infrastructure middleware
##
shared-infra_hosts: *infrastructure_hosts

# repository (apt cache, python packages, etc)
repo-infra_hosts: *infrastructure_hosts

# Ideally the load balancer should not use the infrastructure hosts.
# Dedicated hardware is best for improved performance and security.
haproxy_hosts: *infrastructure_hosts

###
### OpenStack mandatory services
###

## Keystone services
identity_hosts: *infrastructure_hosts

# Neutron L2/L3 agents and metadata services
network_hosts:
{% for h in network_hosts_dict %}
  {{ h.name }}:
    ip: {{ h.ip_v4 }}
{% endfor %}

# nova api services
compute-infra_hosts: *infrastructure_hosts

# horizon services
dashboard_hosts: *infrastructure_hosts

# glance services: 
image_hosts:
{% for h in image_hosts_dict %}
  {{ h.name }}:
    ip: {{ h.ip_v4 }}
    container_vars:
      limit_container_types: glance
      glance_nfs_client:
        - server: "{{ infrastructure_hosts_dict[0].ip_v4 }}"
          remote_path: "/images"
          local_path: "/var/lib/glance/images"
          type: "nfs"
          options: "_netdev,auto"
{% endfor %}

# neutron server, agents (L3, etc)
network_hosts:
{% for h in network_hosts_dict %}
  {{ h.name }}:
    ip: {{ h.ip_v4 }}
{% endfor %}
