---
# task file for installing and configuring cobbler on CentOS

- name: set selinux to permissive mode
  shell: setenforce 0
  args:
    executable: /bin/bash
  ignore_errors: true

- name: set selinux in permissive mode permanently
  lineinfile: dest=/etc/selinux/config regexp="^SELINUX=" line="SELINUX=permissive"

- name: install epel repo
  yum: name=epel-release state=present

# cobbler depends on PyYAML, createrepo, httpd, mod_wsgi, rsync, tftp-server and so on.
- name: Set cobbler package dependencies
  set_fact:
    cobbler_packages:
        - dhcp
        - pykickstart
        - createrepo
        - httpd
        - mkisofs
        - mod_wsgi
        - mod_ssl
        - python-cheetah
        - python-netaddr
        - python-simplejson
        - python-urlgrabber
        - PyYAML
        - rsync
        - syslinux
        - tftp-server
        - yum-utils
        - bind
        - bind-utils
        - fence-agents
        - cobbler

- name: install related packages
  yum:
    name: "{{ cobbler_packages }}"
    state: present
  
- name: generate crypted password
  shell: openssl passwd -1 {{ cobbler_default_password }}
  register: result
  failed_when: result.rc != 0

- name: set default cobbler password crypted
  set_fact:
    cobbler_default_password_crypted: "{{ result.stdout }}"

- name: template /etc/cobbler/settings
  template: src=etc/cobbler/settings.j2 dest=/etc/cobbler/settings backup=yes
  notify: restart cobblerd

- name: template /etc/cobbler/dhcp.template
  template: src=etc/cobbler/dhcp.template.j2 dest=/etc/cobbler/dhcp.template backup=yes

- name: template /etc/cobbler/named.template
  template: src=etc/cobbler/named.template.j2 dest=/etc/cobbler/named.template backup=yes
    
- name: change 'disable' to 'no' in /etc/xinetd.d/tftp
  lineinfile: dest=/etc/xinetd.d/tftp regexp="disable" line="disable = no" backup=yes

#----------------
# begin add snippets and kickstarts
#----------------

- name: Find the snippets templates
  find:
    paths: "roles/cobbler/templates/var/lib/cobbler/snippets"
    patterns: '^.*\.j2$'
    use_regex: yes
  register: snippet_templates
  tags: always

- name: Drop the snippnet templates
  template:
    src: "{{ item }}"
    dest: "/var/lib/cobbler/snippets/{{ (item | basename).split('.')[:-1] | join('.') }}"
    backup: yes
  with_items: "{{ snippet_templates.get('files', []) | map(attribute='path') | list }}"
  tags: drop-snippet-files

- name: Drop the kickstart templates
  template:
    src: "var/lib/cobbler/kickstarts/centos7-osa.j2"
    dest: "/var/lib/cobbler/kickstarts/centos7-osa_{{ item.key }}-{{ item.value.boot_drive }}.ks"
    backup: yes
    group: root
    mode: 0644
  with_dict: "{{ onpc_netboot_profiles }}"
  tags: drop-kickstart-files

# end add snippets and kickstarts

- name: start and enable service
  service: name={{ item }} state=started enabled=yes
  with_items:
    - rsyncd
    - tftp
    - httpd
    - named
    - cobblerd

- name: cobbler get-loaders
  shell: cobbler get-loaders
  changed_when: false


# cobbler-web
- name: install cobbler-web
  include: web.yml
  when: cobbler_install_web is defined and cobbler_install_web | bool




