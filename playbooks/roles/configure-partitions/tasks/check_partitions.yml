# Disk and partitions configuration task
---
# Copyright (c) 2018, OpenNext SAS
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- fail: msg="Wrong partition specification {{ partition_setup }}"
  when: partition_setup is not defined or not partition_setup.get('device_path')

- name: Checking disk for proper partitioning
  shell: sgdisk -v "{{ partition_setup.get('device_path') }}"
  register: sgdisk_status
  changed_when: false

- name: Resetting disk for proper partitioning
  shell: sgdisk -e "{{ partition_setup.get('device_path') }}"
  when: sgdisk_status.get('stdout_lines', []) | select('match', '^Problem[:] .*') | list | length > 0

- name: Retrieving disk and partitions infos
  parted:
    device: "{{ partition_setup.get('device_path') }}"
    state: info
    unit: GB
  register: disk_and_partitions_infos
  environment: "{{ parted_env | default({}) | combine({ 'LC_ALL': 'C' }) }}"

- name: Setting disk and partitions facts
  set_fact:
    found_disk_table_type: "{{ disk_and_partitions_infos.get('disk', {}).get('table') }}"
    found_disk_size: "{{ disk_and_partitions_infos.get('disk', {}).get('size') }}"

# PP: This looks pointless. Commented for now
#- fail: msg="Disk is too small required {{ partition_setup.get('minsize') }} found {{ found_disk_size }}"
#  when: partition_setup.get('minsize') and found_disk_size | float < partition_setup.get('minsize') | float

- fail: msg="Wrong table type {{ found_disk_table_type }}"
  when: found_disk_table_type != partition_setup.get('disk_table_type', 'gpt') and found_disk_table_type != 'unknown'

- include_tasks: create_partition.yml
  vars:
    disk_device: "{{ partition_setup.get('device_path') }}"
    partition_setup: "{{ item }}"
  with_items: "{{  partition_setup.get('partitions', []) }}"