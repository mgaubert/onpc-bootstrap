---
- name: Create networks
  os_network:
    endpoint_type: internal
    cloud: default
    state: present
    name: "{{ item.name }}"
    shared: "{{ item.shared }}"
    external: "{{ item.external }}"
    provider_network_type: "{{ item.network_type }}"
    provider_physical_network: "{{ item.physical_network | default ('') }}"
  with_items: "{{ networks }}"
  tags: create-networks

- name: Create subnets on networks
  os_subnet:
    endpoint_type: internal
    cloud: default
    state: present
    name: "{{ item.name }}"
    network_name: "{{ item.network_name }}"
    ip_version: "{{ item.ip_version }}"
    cidr: "{{ item.cidr }}"
    gateway_ip: "{{ item.gateway_ip }}"
    enable_dhcp: "{{ item.enable_dhcp }}"
    allocation_pool_start: "{{ item.allocation_pool_start }}"
    allocation_pool_end: "{{ item.allocation_pool_end }}"
    dns_nameservers: "{{ item.dns_nameservers | default([]) }}"
  with_items: "{{ subnets }}"
  tags: create-networks
  
- name: Create a router on both public and private networks
  os_router:
    endpoint_type: internal
    cloud: default
    state: present
    name: "{{ router_name }}"
    network: "{{ provider_net_name }}"
    interfaces:
      - "{{ private_subnet_name }}"
  ignore_errors: yes  # will report error if this router already exists
  register: router_details
  tags: create-networks

- name: Get list of security groups
  # Must use shell here because Ansible does not have os_security_group_facts module
  shell: "source openrc ; openstack security group list -f yaml | awk '/ID/ {print $2}'"
  args:
    executable: /bin/bash
  register: sec_groups
  tags: create-networks

- name: Setup rules on all security groups
  os_security_group_rule:
    endpoint_type: internal
    cloud: default
    security_group: "{{ item[1] }}"
    protocol: "{{ item[0].protocol }}"
    direction: "{{ item[0].direction }}"
    port_range_min: "{{ item[0].port_min | default(-1) }}"
    port_range_max: "{{ item[0].port_max | default(-1) }}"
  with_nested:
    - "{{ security_group_rules }}"
    - "{{ sec_groups.stdout_lines }}"
  tags: create-networks