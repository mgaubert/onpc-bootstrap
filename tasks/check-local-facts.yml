---
# Copyright (c) 2018, OpenNext SAS
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Verify Ansible version meets requirements
  assert:
    that: "ansible_version.full is version_compare('2.5', '>=')"
    msg: >
      "You must upgrade Ansible version to 2.5 or greater (current version is {{ ansible_version.full }})"

- name: Verify that at least one node has the 'controller' role
  assert:
    that: "'controller' in groups"
    msg: >
      "You must define at least one node with the 'controller' role (MAAS tag) in your inventory"

- name: Verify that 'storage' and 'ceph' roles are not both specified in the inventory
  assert:
    that: "not ('storage' in groups and 'ceph' in groups)"
    msg: >
      "Having both 'storage' (defaults to LVM iSCSI) and 'ceph' roles in the same depoyment is not currently supported"

- name: Verify that the container network is properly defined
  assert:
    that: "container_network is defined and container_network.split('/') | length == 2"
    msg: >
      "The variable 'container_network' is not properly defined"

- name: Verify that the tunnel network is properly defined
  assert:
    that: "tunnel_network is defined and tunnel_network.split('/') | length == 2"
    msg: >
      "The variable 'tunnel_network' is not properly defined"

- name: Verify that the storage network is properly defined
  assert:
    that: "storage_network is defined and storage_network.split('/') | length == 2"
    msg: >
      "The variable 'storage_network' is not properly defined"

- name: Verify that the external network is properly defined
  assert:
    that: "external_network is defined and external_network.split('/') | length == 2"
    msg: >
      "The variable 'storage_network' is not properly defined"

- name: Verify that the infrastructure hosts list is always defined
  assert:
    that: "infrastructure_hosts_list is defined and infrastructure_hosts_list | length > 0"
    msg: >
      "The variable 'infrastructure_hosts_list' is not defined or empty"

- name: Verify that the compute hosts list is always defined
  assert:
    that: "compute_hosts_list is defined and compute_hosts_list | length > 0"
    msg: >
      "The variable 'compute_hosts_list' is not defined or empty"

- name: Verify that the storage hosts list is always defined
  assert:
    that: "storage_hosts_list is defined and storage_hosts_list | length > 0"
    msg: >
      "The variable 'storage_hosts_list' is not defined or empty"

- name: Verify that the ceph hosts list is not empty when the 'ceph' service is enabled
  assert:
    that: "ceph_hosts_list is defined and ceph_hosts_list | length > 0"
    msg: >
      "The 'ceph' service is enabled but the ceph hosts list is not defined or empty"
    when: "'ceph' in bootstrap_host_services"

- name: Verify that the logging hosts list is not empty when the 'logging' service is enabled
  assert:
    that: "logging_hosts_list is defined and logging_hosts_list | length > 0"
    msg: >
      "The 'logging' service is enabled but the logging hosts list is not defined or empty"
    when: "'logging' in bootstrap_host_services"

- name: Verify that the monitoring hosts list is not empty when the 'monitoring' service is enabled
  assert:
    that: "monitoring_hosts_list is defined and monitoring_hosts_list | length > 0"
    msg: >
      "The 'monitoring' service is enabled but the monitoring hosts list is not defined or empty"
    when: "'monitoring' in bootstrap_host_services"

- name: Verify that the internal VIP CIDR is properly defined
  assert:
    that: "{{ internal_vip_cidr | ipaddr }}"
    msg: >
      "The variable 'internal_vip_cidr' is not defined or empty"

- name: Verify that the external VIP CIDR is properly defined
  assert:
    that: "{{ external_vip_cidr | ipaddr }}"
    msg: >
      "The variable 'external_vip_cidr' is not defined or empty"

- name: Verify that the bootstrap services list is properly defined
  assert:
    that: "bootstrap_host_services is defined and bootstrap_host_services | lenght > 0"
    msg: >
      "The variable 'bootstrap_host_services' is not defined or empty"